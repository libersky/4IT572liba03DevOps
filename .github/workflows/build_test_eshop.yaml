name: Build and tests our Eshop

on:
  push:
    branches: ['**']
  workflow_dispatch:

jobs:
  Install:
    name: Install all dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Git Checkout
        uses: actions/checkout@v2.4.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 10

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: node_modules-

      - name: Install with npm
        run: |
          npm ci

  Build:
    needs: Install
    runs-on: ubuntu-latest

    steps:
      - name: Git Checkout
        uses: actions/checkout@v2.4.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 10
          
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}
      
      - name: build
        run: |
          npm rebuild node-sass --force
          npm run build -- --colors

      - name: Cache node modules and build folder
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            ./node_modules
            ./build
          key: ${{ runner.os }}-build-${{ github.run_id }}
          restore-keys: ${{ runner.os }}-build-${{ github.run_id }}

  Test:
    needs: Install
    runs-on: ubuntu-latest

    steps:
      - name: Git Checkout
        uses: actions/checkout@v2.4.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 10

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}
      
      - name: Run Unit Tests
        run: npm run test -- --colors
    
  Deploy:
    needs: [Build, Test]
    name: Deploy to AWS
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/master' }}

    steps:
      - name: Git Checkout
        uses: actions/checkout@v2.4.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip3 install boto boto3 ansible==4

      - name: create pemfile
        run: |
          echo "${{secrets.DEVOPS_PEM}}" > ./devops.pem
          chmod 400 ./devops.pem

      - name: Deploy to AWS
        env:
          ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          SESSION_TOKEN: ${{ secrets.SESSION_TOKEN }}
          ANSIBLE_HOST_KEY_CHECKING: False
        run: ansible-playbook ./ansible/ec2_deploy.yml --user ec2-user --key-file ./devops.pem